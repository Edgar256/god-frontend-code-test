{"version":3,"sources":["images/chevron-small.svg","images/chevron-circled.svg","pages/Error.tsx","components/CarCard.tsx","components/FilterButton.tsx","pages/Listing.tsx","pages/Learn.tsx","pages/Shop.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error","className","CarCard","id","modelName","bodyType","modelType","imageUrl","src","alt","to","ChevronSmall","width","FilterButton","text","handleFilter","onClick","name","Listing","useState","carList","setCarList","current","setCurrent","useEffect","cars","filter","arrayCars","car","length","undefined","arrCars","arrOne","slice","arrTwo","map","index","key","renderCars","carPosition","findIndex","handleActiveShowCar","newCurrent","finite","finiteSubtractOne","prevSlide","ChevronCircled","finiteAddOne","nextSlide","Learn","window","location","pathname","find","Shop","App","basename","path","component","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23cbcc6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chevron-small.976cb13e.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-circled.f0a9bbd8.svg\";","import React from 'react'\r\n\r\nexport default function Error() {\r\n    return (\r\n\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t<h1>Page Not Found</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChevronSmall from \"../images/chevron-small.svg\";\r\n\r\ntype Props = {\r\n\tid: string;\r\n\tmodelName: string;\r\n\tbodyType: string;\r\n\tmodelType: string;\r\n\timageUrl: string;\r\n};\r\n\r\nconst CarCard: React.FC<Props> = ({\r\n\tid,\r\n\tmodelName,\r\n\tbodyType,\r\n\tmodelType,\r\n\timageUrl,\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"car-card\">\r\n\t\t\t<p className=\"car-body-text\">{bodyType}</p>\r\n\t\t\t<div className=\"car-name-type-text\">\r\n\t\t\t\t<p className=\"mr-1\">\r\n\t\t\t\t\t<strong>{modelName}</strong>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>{modelType}</p>\r\n\t\t\t</div>\r\n\t\t\t<img src={imageUrl} alt=\"\" className=\"car-img\" />\r\n\t\t\t<div className=\"car-buttons\">\r\n\t\t\t\t<Link to={`/learn/${id}`} className=\"page-link\">\r\n\t\t\t\t\tLEARN <img src={ChevronSmall} width=\"15\" alt=\"\" />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to={`/shop/${id}`} className=\"page-link\">\r\n\t\t\t\t\tSHOP <img src={ChevronSmall} width=\"15\" alt=\"\" />\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CarCard;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n\ttext: string;\r\n\thandleFilter: (text: string) => void;\r\n};\r\n\r\nconst FilterButton: React.FC<Props> = ({ text, handleFilter }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName=\"btn btn-filters\"\r\n\t\t\tonClick={() => handleFilter(text)}\r\n\t\t\tname=\"filter button\"\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default FilterButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport cars from \"../api/cars.json\";\r\nimport CarCard from \"../components/CarCard\";\r\nimport FilterButton from \"../components/FilterButton\";\r\nimport ChevronCircled from \"../images/chevron-circled.svg\";\r\n\r\nexport type CarType = {\r\n\tid: string;\r\n\tmodelName: string;\r\n\tbodyType: string;\r\n\tmodelType: string;\r\n\timageUrl: string;\r\n};\r\n\r\nexport default function Listing() {\r\n\tconst [carList, setCarList] = useState([] as CarType[]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCarList(cars);\r\n\t}, []);\r\n\r\n\tconst finiteAddOne = (current: number, finite: number) => {\r\n\t\tif (current >= finite) {\r\n\t\t\treturn 0;\r\n\t\t} else {\r\n\t\t\treturn current + 1;\r\n\t\t}\r\n\t};\r\n\r\n\tconst finiteSubtractOne = (current: number, finite: number) => {\r\n\t\tif (current <= 0) {\r\n\t\t\treturn finite;\r\n\t\t} else {\r\n\t\t\treturn current - 1;\r\n\t\t}\r\n\t};\r\n\r\n\tconst prevSlide = () => {\r\n\t\tlet newCurrent = finiteSubtractOne(current, carList.length - 1);\r\n\t\tsetCurrent(newCurrent);\r\n\t};\r\n\r\n\tconst nextSlide = () => {\r\n\t\tlet newCurrent = finiteAddOne(current, carList.length - 1);\r\n\t\tsetCurrent(newCurrent);\r\n\t};\r\n\r\n\tconst handleFilter = (filter: string) => {\r\n\t\tif (filter === \"all\") {\r\n\t\t\treturn setCarList(cars);\r\n\t\t}\r\n\t\tconst arrayCars = cars.filter((car) => {\r\n\t\t\treturn car.bodyType === filter;\r\n\t\t});\r\n\t\treturn setCarList(arrayCars);\r\n\t};\r\n\r\n\tconst handleActiveShowCar = (id: string) => {\r\n\t\tconst carPosition = carList.findIndex((car) => {\r\n\t\t\treturn car.id === id;\r\n\t\t});\r\n\t\tsetCurrent(carPosition);\r\n\t};\r\n\r\n\tconst renderCars = () => {\r\n\t\tif (carList.length < 1 || carList === undefined)\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>No Cars found</h1>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\tlet arrCars = [...carList];\r\n\t\tlet arrOne = arrCars.slice(0, current);\r\n\t\tlet arrTwo = arrCars.slice(current);\r\n\t\tlet combinedArray = [...arrTwo, ...arrOne];\r\n\r\n\t\treturn combinedArray.map((car, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<CarCard\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tbodyType={car.bodyType}\r\n\t\t\t\t\tid={car.id}\r\n\t\t\t\t\tmodelName={car.modelName}\r\n\t\t\t\t\tmodelType={car.modelType}\r\n\t\t\t\t\timageUrl={car.imageUrl}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"filters-container\">\r\n\t\t\t\t\t<h4 className=\"\">Sort by Body Types : </h4>\r\n\t\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t\t<FilterButton text=\"suv\" handleFilter={handleFilter} />\r\n\t\t\t\t\t\t<FilterButton text=\"sedan\" handleFilter={handleFilter} />\r\n\t\t\t\t\t\t<FilterButton text=\"estate\" handleFilter={handleFilter} />\r\n\t\t\t\t\t\t<FilterButton text=\"all\" handleFilter={handleFilter} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"body-container\">{renderCars()}</div>\r\n\t\t\t<div className=\"dot-container\">\r\n\t\t\t\t{carList.map((car, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={index === current ? \"dot active\" : \"dot\"}\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tonClick={() => handleActiveShowCar(car.id)}\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"button-container\">\r\n\t\t\t\t<button className=\"btn rotate-180\" onClick={() => prevSlide()}>\r\n\t\t\t\t\t<img src={ChevronCircled} width=\"30\" alt=\"\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn\" onClick={() => nextSlide()}>\r\n\t\t\t\t\t<img src={ChevronCircled} width=\"30\" alt=\"\" />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport cars from \"../api/cars.json\";\r\n\r\nexport default function Learn() {\r\n\tconst id = window.location.pathname.slice(7);\r\n\tconst car = cars.find((car) => car.id === id);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h2>Learn more about {car?.modelName}</h2>\r\n\t\t\t<div className=\"w-100\">\r\n\t\t\t\t<p className=\"car-body-text\">{car?.bodyType}</p>\r\n\t\t\t\t<div className=\"car-name-type-text\">\r\n\t\t\t\t\t<p className=\"mr-1\">\r\n\t\t\t\t\t\t<strong>{car?.modelName}</strong>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>{car?.modelType}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img src={car?.imageUrl} alt=\"\" className=\"car-img\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport cars from \"../api/cars.json\";\r\n\r\nexport default function Shop() {\r\n\tconst id = window.location.pathname.slice(6);\r\n\tconst car = cars.find((car) => car.id === id);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h2>Shop {car?.modelName}</h2>\r\n\t\t\t<div className=\"w-100\">\r\n\t\t\t\t<p className=\"car-body-text\">{car?.bodyType}</p>\r\n\t\t\t\t<div className=\"car-name-type-text\">\r\n\t\t\t\t\t<p className=\"mr-1\">\r\n\t\t\t\t\t\t<strong>{car?.modelName}</strong>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>{car?.modelType}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img src={car?.imageUrl} alt=\"\" className=\"car-img\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Error from \"./pages/Error\";\r\nimport Listing from \"./pages/Listing\";\r\nimport Learn from \"./pages/Learn\";\r\nimport Shop from \"./pages/Shop\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router basename=\"/\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" component={Listing} exact />\r\n\t\t\t\t<Route path=\"/learn/:id\" component={Learn} />\r\n\t\t\t\t<Route path=\"/shop/:id\" component={Shop} />\r\n\t\t\t\t<Route component={Error} />\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}